

int* slidingMaximum(const int* A, int n, int w, int *len1) {
    if(w>n)
        w=n;
    int *b=(int*)malloc(sizeof(int)*(n-w+1));
    *len1=n-w+1;
    int *d=(int*)malloc(sizeof(int)*(w+1));
    int i,j=0,k,l,h;
    d[w]=0;
    for(i=0;(i+w-1)<n;i+=w)
    {
        for(k=i+w-1;k>=i;--k)
        {
            d[k-i]=d[k-i+1]>A[k]?d[k-i+1]:A[k];
            //printf("%dd\n",d[k-i]);
        }
        h=i+w-1;
        l=0;
        for(k=i;k<(i+w);++k)
        {
            if(h==n)
                break;
            l=l>A[h]?l:A[h];
            b[j++]=d[k-i]>l?d[k-i]:l;
            h++;
            //printf("%dl\n",d[k-i]>l?d[k-1]:l);
        }
    }
    return b;
}
