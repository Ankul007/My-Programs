// Sorting using comparator
import java.util.*;
import java.util.Collections;

public class StudentSort {

	private List<Student> s = new ArrayList<>();

	public void sort() {
		Collections.sort(s);
	}
	
	private void sort(CustomComparator customComparator) {
		Collections.sort(s, customComparator);
		
	}

	public void print() {
		for (Student ss : s) {
			System.out.println(ss.toString());
		}
	}

	public void insert(Student i) {
		s.add(i);
	}

	public static void main(String[] args) {
		StudentSort m = new StudentSort();
		m.insert(new Student(1, "a", 1.2f));
		m.insert(new Student(2, "b", 5.2f));
		m.insert(new Student(3, "c", 7.2f));
		m.insert(new Student(4, "d", 2.2f));
		m.insert(new Student(5, "e", 8.2f));
		
		m.sort(); //default sorting using comparable eg CGPA
		m.print();
		System.out.println("----------------------------");
 		m.sort(new CustomComparator()); //custom sorting using roll no (comparator)
		m.print();

	}
	
	

	private static class CustomComparator implements Comparator<Student>{

		@Override
		public int compare(Student arg0, Student arg1) {
			if (arg0.rollNo==arg1.rollNo) return 0;
			if(arg0.rollNo>arg1.rollNo) return +1;
			return -1;
		}
		
	}

	private static class Student implements Comparable<Student> {
		private int rollNo;
		private String name;
		private float cgpa;

		public Student(int rollNo, String name, float cgpa) {
			this.name = name;
			this.rollNo = rollNo;
			this.cgpa = cgpa;
		}

		@Override
		public int compareTo(Student o) {
			if (o == null)
				return +1;
			if (this.cgpa < o.cgpa)
				return -1;
			if (this.cgpa > o.cgpa)
				return +1;
			return 0;
		}

		@Override
		public String toString() {
			return "Student [rollNo=" + rollNo + ", name=" + name + ", cgpa=" + cgpa + "]";
		}

	}

}
