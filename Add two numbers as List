/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 * 
 * typedef struct ListNode listnode;
 * 
 * listnode* listnode_new(int val) {
 *     listnode* node = (listnode *) malloc(sizeof(listnode));
 *     node->val = val;
 *     node->next = NULL;
 *     return node;
 * }
 */
/**
 * @input A : Head pointer of linked list 
 * @input B : Head pointer of linked list 
 * 
 * @Output head pointer of list.
 */
listnode* addTwoNumbers(listnode* A, listnode* B) {
    int len1=0,len2=0,carry=0,sum;
    listnode *a=A,*b=B,*ans,*prev;
    while(a)
    {
        len1++;
        a=a->next;
    }
    while(b)
    {
        len2++;
        b=b->next;
    }
    a=A;    b=B;
    if(len1>len2)       ans=a;
    else                ans=b;
    while(a && b)
    {
        sum=a->val+b->val+carry;
        ans->val=sum%10;
        carry=sum/10;
        a=a->next;
        b=b->next;
        prev=ans;
        ans=ans->next;
    }
     while(a)
    {
        sum=a->val+carry;
        ans->val=sum%10;
        carry=sum/10;
        a=a->next;
        prev=ans;
        ans=ans->next;
    }
     while(b)
    {
        sum=b->val+carry;
        ans->val=sum%10;
        carry=sum/10;
        b=b->next;
        prev=ans;
        ans=ans->next;
    }
    if(carry)
    prev->next=listnode_new(carry);
    if(len1>len2)       return A;
    else                return B;
    
    
    
    
}
