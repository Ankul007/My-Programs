/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 * 
 * typedef struct ListNode listnode;
 * 
 * listnode* listnode_new(int val) {
 *     listnode* node = (listnode *) malloc(sizeof(listnode));
 *     node->val = val;
 *     node->next = NULL;
 *     return node;
 * }
 */
/**
 * @input A : Head pointer of linked list 
 * @input B : Integer
 * 
 * @Output head pointer of list.
 */
listnode* partition(listnode* A, int B) {
    listnode *small=NULL,*large=NULL,*i=NULL,*k=NULL;
    while(A)
    {
        if(A->val<B)
        {
            if(small==NULL)
                small=i=A;
            else
            {
                i->next=A;
                i=i->next;
            }
        }
        else 
        {
            if(large==NULL)
                large=k=A;
            else
            {
                k->next=A;
                k=k->next;
            }
        }
        A=A->next;
    }
    if(k)   k->next=NULL;
    if(small==NULL)
        return large;
    i->next=large;
    return small;
}

